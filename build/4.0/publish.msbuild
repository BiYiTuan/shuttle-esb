<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="PerformRelease" ToolsVersion="4.0">
	<UsingTask AssemblyFile="MSBuildCommunityTasks\MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.Prompt" />
	<UsingTask AssemblyFile="MSBuildCommunityTasks\MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.FileUpdate" />
	
	<PropertyGroup>
		<DeploymentFolder>..\deployment</DeploymentFolder>
	</PropertyGroup>

	<ItemGroup>
		<Framework Include="net35-full;net40-full;net45-full" />
	</ItemGroup>

	<Target Name="PerformRelease">
		<Prompt Text="Enter semantic version:" Condition="$(SemanticVersion) == ''">
			<Output TaskParameter="UserInput" PropertyName="SemanticVersion" />
		</Prompt>

		<MSBuild
            Projects="$(MSBuildProjectFile)"
            Targets="ApplyVersionNumbers"
            Properties="SemanticVersion=$(SemanticVersion)"
        />

		<MSBuild Projects="build.msbuild" />

		<MSBuild
            Projects="$(MSBuildProjectFile)"
            Targets="NugetDeployments"
            Properties="SemanticVersion=$(SemanticVersion);PackageId=$(PackageId);Operation=$(Operation)"
        />
	</Target>

	<Target Name="ApplyVersionNumbers">
		<Error Text="Please enter a version number." Condition="$(SemanticVersion) == ''" />

		<ItemGroup>
			<AssemblyInfoFiles Include="..\..\**\*AssemblyInfo.cs"/>
			<NugetFiles Include="..\..\**\*.nuspec"/>
		</ItemGroup>

		<FileUpdate Files="@(AssemblyInfoFiles)" Regex="AssemblyInformationalVersion\s*\(\s*&quot;.*&quot;\s*\)" ReplacementText="AssemblyInformationalVersion(&quot;$(SemanticVersion)&quot;)" />
		<FileUpdate Files="@(AssemblyInfoFiles)" Regex="AssemblyVersion\s*\(\s*&quot;.*&quot;\s*\)" ReplacementText="AssemblyVersion(&quot;$(SemanticVersion).0&quot;)" />
		<FileUpdate Files="@(NugetFiles)" Regex="\&lt;version\&gt;.*\&lt;/version\&gt;" ReplacementText="&lt;version&gt;$(SemanticVersion)&lt;/version&gt;" />
	</Target>

	<Target Name="NugetDeployments">
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-core;include=..\release\**\Shuttle.ESB.Core.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-core'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-castle;include=..\release\**\Shuttle.ESB.Castle.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-castle'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-modules;include=..\release\**\Shuttle.ESB.Modules.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-modules'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-filemq;include=..\release\**\Shuttle.ESB.FileMQ.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-filemq'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-msmq;include=..\release\**\Shuttle.ESB.Msmq.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-msmq'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-rabbitmq;include=..\release\**\Shuttle.ESB.RabbitMQ.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-rabbitmq'"/>
		<MSBuild Projects="publish.msbuild" Targets="NugetDeployment" Properties="PackageId=shuttle-esb-sqlserver;include=..\release\**\Shuttle.ESB.SqlServer.dll" Condition="$(PackageId) == '' Or $(PackageId) == 'shuttle-esb-sqlserver'"/>
	</Target>

	<Target Name="NugetDeployment">
		<CreateItem Include="$(include)">
			<Output TaskParameter="Include" ItemName="NugetBinaries"/>
		</CreateItem>

		<Copy SourceFiles="$(PackageId).nuspec" DestinationFolder="$(DeploymentFolder)\nuget\$(PackageId)" SkipUnchangedFiles="false" />
		<Copy SourceFiles="@(NugetBinaries)" DestinationFolder="$(DeploymentFolder)\nuget\$(PackageId)\lib\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<Exec Command="nuget pack $(PackageId).nuspec" WorkingDirectory="$(DeploymentFolder)\nuget\$(PackageId)" />
		<Exec Command="nuget push $(DeploymentFolder)\nuget\$(PackageId)\$(PackageId).$(SemanticVersion).nupkg" Condition="$(Operation) != 'pack-only'" />
	</Target>  
</Project>
